[
  {
    "objectID": "about/Sue-EllenDuffy.html",
    "href": "about/Sue-EllenDuffy.html",
    "title": "Sue-Ellen Duffy",
    "section": "",
    "text": "UMass Amherst 2009-2013 Public Health - Community Health and Education\nUMass Amherst 2023-present DACSS\nFreelance Education Research (Observer, Assessor) - Abt Associates, Boston, MA\nAcademic Services Researcher - Jewish Vocational Services, Boston, MA\nFreelance Education Researcher (Assessor) - Harvard University, Boston, MA\nNonprofit Research and Food Justice Work - Fair Foods, Boston, MA\nFacilitation Trainer - UMass Amherst, MA"
  },
  {
    "objectID": "about/Sue-EllenDuffy.html#r-experience",
    "href": "about/Sue-EllenDuffy.html#r-experience",
    "title": "Sue-Ellen Duffy",
    "section": "R experience",
    "text": "R experience\nLimited - DACSS 601 is my first exposure!"
  },
  {
    "objectID": "about/Sue-EllenDuffy.html#research-interests",
    "href": "about/Sue-EllenDuffy.html#research-interests",
    "title": "Sue-Ellen Duffy",
    "section": "Research interests",
    "text": "Research interests\nEducation, Gender, Food Justice/Access, Connection, PAR"
  },
  {
    "objectID": "about/Sue-EllenDuffy.html#hometown",
    "href": "about/Sue-EllenDuffy.html#hometown",
    "title": "Sue-Ellen Duffy",
    "section": "Hometown",
    "text": "Hometown\nI grew up in The South Shore of Massachusetts and have lived in Boston now for 7 years."
  },
  {
    "objectID": "about/Sue-EllenDuffy.html#hobbies",
    "href": "about/Sue-EllenDuffy.html#hobbies",
    "title": "Sue-Ellen Duffy",
    "section": "Hobbies",
    "text": "Hobbies\nForaging, Gardening, Sunbasking, Bar Pizza"
  },
  {
    "objectID": "about/Sue-EllenDuffy.html#fun-fact",
    "href": "about/Sue-EllenDuffy.html#fun-fact",
    "title": "Sue-Ellen Duffy",
    "section": "Fun fact",
    "text": "Fun fact\nI once went on tour with the band They Might Be Giants - I was their truck driver and assistant manager ;)"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Contributors",
    "section": "",
    "text": "Find out more about our DACSS students who contributed to the blog.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSue-Ellen Duffy\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "DACSS 601: Data Science Fundamentals Spring-2023",
    "section": "",
    "text": "The blog posts here are contributed by students enrolled in DACSS 601, Fundamentals of Data Science. The course provides students with an introduction to R and the tidyverse, scientific publishing, and collaboration through GitHub, building a foundation for future coursework. Students also are introduced to general data management and data wrangling skills, with an emphasis on best practice workflows and tidy data management.\n\n\n\n\n\n\n\n\n\n\nRailroad_Employees_Challenge_1\n\n\n\n\n\n\n\nchallenge_1\n\n\nSue-Ellen Duffy\n\n\nRailroad Employee Dataset\n\n\n\n\n\n\n\n\n\n\n\nFeb 23, 2023\n\n\nSue-Ellen Duffy\n\n\n\n\n\n\n\n\nBlog Post Template\n\n\n\n\n\n\n\nhw1\n\n\nchallenge1\n\n\nmy name\n\n\ndataset\n\n\nggplot2\n\n\n\n\n\n\n\n\n\n\n\nAug 2, 2022\n\n\nYour Name\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Draft_Sue-EllenDuffy_Challenge_2.html",
    "href": "posts/Draft_Sue-EllenDuffy_Challenge_2.html",
    "title": "Blog Post Template",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(summarytools)\nlibrary(readxl)\n\nknitr::opts_chunk$set(echo = TRUE)"
  },
  {
    "objectID": "posts/Draft_Sue-EllenDuffy_Challenge_2.html#instructions",
    "href": "posts/Draft_Sue-EllenDuffy_Challenge_2.html#instructions",
    "title": "Blog Post Template",
    "section": "Instructions",
    "text": "Instructions\nThis document provides yaml header inforamtion you will need to replicate each week to submit your homework or other blog posts. Please observe the following conventions:\n\nSave your own copy of this template as a blog post in the posts folder, naming it FirstLast_hwX.qmd\nEdit the yaml header to change your author name - use the same name each week\ninclude a description that is reader friendly\nupdate the category list to indicate the type of submission, the data used, the main packages or techniques, your name, or any thing else to make your document easy to find\nedit as a normal qmd/rmd file\n\n\n\nCode\n#Read in data and rename railroad_2012_clean_county as data\ngroups <- read_csv(\"_data/FAOSTAT_country_groups.csv\")\n\n\nRows: 1943 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): Country Group, Country, M49 Code, ISO2 Code, ISO3 Code\ndbl (2): Country Group Code, Country Code\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\ngroups\n\n\n# A tibble: 1,943 × 7\n   `Country Group Code` `Country Group` Countr…¹ Country M49 C…² ISO2 …³ ISO3 …⁴\n                  <dbl> <chr>              <dbl> <chr>   <chr>   <chr>   <chr>  \n 1                 5100 Africa                 4 Algeria 012     DZ      DZA    \n 2                 5100 Africa                 7 Angola  024     AO      AGO    \n 3                 5100 Africa                53 Benin   204     BJ      BEN    \n 4                 5100 Africa                20 Botswa… 072     BW      BWA    \n 5                 5100 Africa               233 Burkin… 854     BF      BFA    \n 6                 5100 Africa                29 Burundi 108     BI      BDI    \n 7                 5100 Africa                35 Cabo V… 132     CV      CPV    \n 8                 5100 Africa                32 Camero… 120     CM      CMR    \n 9                 5100 Africa                37 Centra… 140     CF      CAF    \n10                 5100 Africa                39 Chad    148     TD      TCD    \n# … with 1,933 more rows, and abbreviated variable names ¹​`Country Code`,\n#   ²​`M49 Code`, ³​`ISO2 Code`, ⁴​`ISO3 Code`"
  },
  {
    "objectID": "posts/Draft_Sue-EllenDuffy_Challenge_2.html#rendering-your-post",
    "href": "posts/Draft_Sue-EllenDuffy_Challenge_2.html#rendering-your-post",
    "title": "Blog Post Template",
    "section": "Rendering your post",
    "text": "Rendering your post\n\n\nCode\ndfSummary(groups)\n\n\nData Frame Summary  \ngroups  \nDimensions: 1943 x 7  \nDuplicates: 0  \n\n--------------------------------------------------------------------------------------------------------------------------\nNo   Variable             Stats / Values                  Freqs (% of Valid)    Graph                 Valid      Missing  \n---- -------------------- ------------------------------- --------------------- --------------------- ---------- ---------\n1    Country Group Code   Mean (sd) : 5501.8 (1356.5)     58 distinct values              :           1943       0        \n     [numeric]            min < med < max:                                                : :         (100.0%)   (0.0%)   \n                          336 < 5403 < 9011                                               : :                             \n                          IQR (CV) : 648 (0.2)                                            : :                             \n                                                                                .         : :     .                       \n\n2    Country Group        1. World                        277 (14.3%)           II                    1943       0        \n     [character]          2. Non-Annex I countries        161 ( 8.3%)           I                     (100.0%)   (0.0%)   \n                          3. Net Food Importing Develo     81 ( 4.2%)                                                     \n                          4. Annex I countries             78 ( 4.0%)                                                     \n                          5. High-income economies         64 ( 3.3%)                                                     \n                          6. Africa                        63 ( 3.2%)                                                     \n                          7. Europe                        63 ( 3.2%)                                                     \n                          8. Americas                      61 ( 3.1%)                                                     \n                          9. Small Island Developing S     58 ( 3.0%)                                                     \n                          10. Upper-middle-income econo    56 ( 2.9%)                                                     \n                          [ 48 others ]                   981 (50.5%)           IIIIIIIIII                                \n\n3    Country Code         Mean (sd) : 142.2 (96.4)        277 distinct values   : : : :               1943       0        \n     [numeric]            min < med < max:                                      : : : :               (100.0%)   (0.0%)   \n                          1 < 136 < 622                                         : : : :                                   \n                          IQR (CV) : 133 (0.7)                                  : : : : .                                 \n                                                                                : : : : :         .                       \n\n4    Country              1. Afghanistan                    11 ( 0.6%)                                1943       0        \n     [character]          2. Burkina Faso                   11 ( 0.6%)                                (100.0%)   (0.0%)   \n                          3. Burundi                        11 ( 0.6%)                                                    \n                          4. Central African Republic       11 ( 0.6%)                                                    \n                          5. Chad                           11 ( 0.6%)                                                    \n                          6. Comoros                        11 ( 0.6%)                                                    \n                          7. Ethiopia                       11 ( 0.6%)                                                    \n                          8. Guinea-Bissau                  11 ( 0.6%)                                                    \n                          9. Lesotho                        11 ( 0.6%)                                                    \n                          10. Malawi                        11 ( 0.6%)                                                    \n                          [ 267 others ]                  1833 (94.3%)          IIIIIIIIIIIIIIIIII                        \n\n5    M49 Code             1. 004                            11 ( 0.6%)                                1943       0        \n     [character]          2. 108                            11 ( 0.6%)                                (100.0%)   (0.0%)   \n                          3. 140                            11 ( 0.6%)                                                    \n                          4. 148                            11 ( 0.6%)                                                    \n                          5. 174                            11 ( 0.6%)                                                    \n                          6. 231                            11 ( 0.6%)                                                    \n                          7. 426                            11 ( 0.6%)                                                    \n                          8. 454                            11 ( 0.6%)                                                    \n                          9. 466                            11 ( 0.6%)                                                    \n                          10. 496                           11 ( 0.6%)                                                    \n                          [ 267 others ]                  1833 (94.3%)          IIIIIIIIIIIIIIIIII                        \n\n6    ISO2 Code            1. AF                             11 ( 0.6%)                                1935       8        \n     [character]          2. BF                             11 ( 0.6%)                                (99.6%)    (0.4%)   \n                          3. BI                             11 ( 0.6%)                                                    \n                          4. CF                             11 ( 0.6%)                                                    \n                          5. ET                             11 ( 0.6%)                                                    \n                          6. GW                             11 ( 0.6%)                                                    \n                          7. KM                             11 ( 0.6%)                                                    \n                          8. LS                             11 ( 0.6%)                                                    \n                          9. ML                             11 ( 0.6%)                                                    \n                          10. MN                            11 ( 0.6%)                                                    \n                          [ 266 others ]                  1825 (94.3%)          IIIIIIIIIIIIIIIIII                        \n\n7    ISO3 Code            1. AFG                            11 ( 0.6%)                                1943       0        \n     [character]          2. BDI                            11 ( 0.6%)                                (100.0%)   (0.0%)   \n                          3. BFA                            11 ( 0.6%)                                                    \n                          4. CAF                            11 ( 0.6%)                                                    \n                          5. COM                            11 ( 0.6%)                                                    \n                          6. ETH                            11 ( 0.6%)                                                    \n                          7. GNB                            11 ( 0.6%)                                                    \n                          8. LSO                            11 ( 0.6%)                                                    \n                          9. MLI                            11 ( 0.6%)                                                    \n                          10. MNG                           11 ( 0.6%)                                                    \n                          [ 267 others ]                  1833 (94.3%)          IIIIIIIIIIIIIIIIII                        \n--------------------------------------------------------------------------------------------------------------------------\n\n\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code.\n\n\n\n\n\n\nWarning\n\n\n\nBe sure that you have moved your *.qmd file into the posts folder BEFORE you render it, so that all files are stored in the correct location.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nOnly render a single file - don’t try to render the whole website!\n\n\n\n\n\n\n\n\nPilot Student Blogs\n\n\n\nWe are piloting a workflow including individual student websites with direted and limited pull requests back to course blogs. Please let us know if you would like to participate."
  },
  {
    "objectID": "posts/Draft_Sue-EllenDuffy_Challenge_2.html#reading-in-data-files",
    "href": "posts/Draft_Sue-EllenDuffy_Challenge_2.html#reading-in-data-files",
    "title": "Blog Post Template",
    "section": "Reading in data files",
    "text": "Reading in data files\nThe easiest data source to use - at least initially - is to choose something easily accessible, either from our _data folder provided, or from an online source that is publicly available.\n\n\n\n\n\n\nUsing Other Data\n\n\n\nIf you would like to use a source that you have access to and it is small enough and you don’t mind making it public, you can copy it into the _data file and include in your commit and pull request.\n\n\n\n\n\n\n\n\nUsing Private Data\n\n\n\nIf you would like to use a proprietary source of data, that should be possible using the same process outlined above. There may initially be a few issues. We hope to have this feature working smoothly soon!"
  },
  {
    "objectID": "posts/SDuffy_challenge_1.html",
    "href": "posts/SDuffy_challenge_1.html",
    "title": "Railroad_Employees_Challenge_1",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(summarytools)\n\nknitr::opts_chunk$set(echo = TRUE)"
  },
  {
    "objectID": "posts/SDuffy_challenge_1.html#reading-in-the-data",
    "href": "posts/SDuffy_challenge_1.html#reading-in-the-data",
    "title": "Railroad_Employees_Challenge_1",
    "section": "Reading in the Data",
    "text": "Reading in the Data\nI analyzed the “railroad_2012_county_clean.csv” data for Challenge 1. This data describes the Total Number of Railroad Employees by County and State in the United States in 2012. Upon first glance the data contains 3 columns and 2,930 rows. The columns are: state, county, and total_employees\n\n\nCode\n#Read in data and rename railroad_2012_clean_county as data\ndata <- rename(read_csv(\"_data/railroad_2012_clean_county.csv\"))\n\n\nRows: 2930 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): state, county\ndbl (1): total_employees\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n#Preview data \ndata\n\n\n# A tibble: 2,930 × 3\n   state county               total_employees\n   <chr> <chr>                          <dbl>\n 1 AE    APO                                2\n 2 AK    ANCHORAGE                          7\n 3 AK    FAIRBANKS NORTH STAR               2\n 4 AK    JUNEAU                             3\n 5 AK    MATANUSKA-SUSITNA                  2\n 6 AK    SITKA                              1\n 7 AK    SKAGWAY MUNICIPALITY              88\n 8 AL    AUTAUGA                          102\n 9 AL    BALDWIN                          143\n10 AL    BARBOUR                            1\n# … with 2,920 more rows"
  },
  {
    "objectID": "posts/SDuffy_challenge_1.html#summary-of-data",
    "href": "posts/SDuffy_challenge_1.html#summary-of-data",
    "title": "Railroad_Employees_Challenge_1",
    "section": "Summary of Data",
    "text": "Summary of Data\nRunning the dfsummary(data) function shows us:\n\nThe data is complete: there are no missing data.\nTop ten states ranked with the most counties. Texas has the most counties of any other state, accounting for 7.5% of all counties in the United States.\nThere are multiples of county names. We see in the following graph the top 10 county names that are used in the United States. (There are 31 Washington county names in this data plot, that’s far more than I thought there were in the United States!)\n\n\n\nCode\ndfSummary(data)\n\n\nData Frame Summary  \ndata  \nDimensions: 2930 x 3  \nDuplicates: 0  \n\n-----------------------------------------------------------------------------------------------------------------\nNo   Variable          Stats / Values             Freqs (% of Valid)    Graph                Valid      Missing  \n---- ----------------- -------------------------- --------------------- -------------------- ---------- ---------\n1    state             1. TX                       221 ( 7.5%)          I                    2930       0        \n     [character]       2. GA                       152 ( 5.2%)          I                    (100.0%)   (0.0%)   \n                       3. KY                       119 ( 4.1%)                                                   \n                       4. MO                       115 ( 3.9%)                                                   \n                       5. IL                       103 ( 3.5%)                                                   \n                       6. IA                        99 ( 3.4%)                                                   \n                       7. KS                        95 ( 3.2%)                                                   \n                       8. NC                        94 ( 3.2%)                                                   \n                       9. IN                        92 ( 3.1%)                                                   \n                       10. VA                       92 ( 3.1%)                                                   \n                       [ 43 others ]              1748 (59.7%)          IIIIIIIIIII                              \n\n2    county            1. WASHINGTON                31 ( 1.1%)                               2930       0        \n     [character]       2. JEFFERSON                 26 ( 0.9%)                               (100.0%)   (0.0%)   \n                       3. FRANKLIN                  24 ( 0.8%)                                                   \n                       4. LINCOLN                   24 ( 0.8%)                                                   \n                       5. JACKSON                   22 ( 0.8%)                                                   \n                       6. MADISON                   19 ( 0.6%)                                                   \n                       7. MONTGOMERY                18 ( 0.6%)                                                   \n                       8. CLAY                      17 ( 0.6%)                                                   \n                       9. MARION                    17 ( 0.6%)                                                   \n                       10. MONROE                   17 ( 0.6%)                                                   \n                       [ 1699 others ]            2715 (92.7%)          IIIIIIIIIIIIIIIIII                       \n\n3    total_employees   Mean (sd) : 87.2 (283.6)   404 distinct values   :                    2930       0        \n     [numeric]         min < med < max:                                 :                    (100.0%)   (0.0%)   \n                       1 < 21 < 8207                                    :                                        \n                       IQR (CV) : 58 (3.3)                              :                                        \n                                                                        :                                        \n-----------------------------------------------------------------------------------------------------------------\n\n\n\n\nCode\n#How many states are represented in the data?\ndata %>%\n  select(state) %>%\n  n_distinct(.)\n\n\n[1] 53\n\n\nThere are only 50 recognized states, so we need to dig a little deeper to find out what the three additional ‘states’ represent.\n\n\nCode\n#Show unique state data\nunique(data$state)\n\n\n [1] \"AE\" \"AK\" \"AL\" \"AP\" \"AR\" \"AZ\" \"CA\" \"CO\" \"CT\" \"DC\" \"DE\" \"FL\" \"GA\" \"HI\" \"IA\"\n[16] \"ID\" \"IL\" \"IN\" \"KS\" \"KY\" \"LA\" \"MA\" \"MD\" \"ME\" \"MI\" \"MN\" \"MO\" \"MS\" \"MT\" \"NC\"\n[31] \"ND\" \"NE\" \"NH\" \"NJ\" \"NM\" \"NV\" \"NY\" \"OH\" \"OK\" \"OR\" \"PA\" \"RI\" \"SC\" \"SD\" \"TN\"\n[46] \"TX\" \"UT\" \"VA\" \"VT\" \"WA\" \"WI\" \"WV\" \"WY\"\n\n\nAE, AP, and DC are the three non-states cases. AE and AP are military addresses. DC is Washington DC."
  },
  {
    "objectID": "Tutorial 1 SD.html",
    "href": "Tutorial 1 SD.html",
    "title": "Test File SD",
    "section": "",
    "text": "We can do basic arithmetic very easily in R. Let’s start with addition\n\n\nYou can use R as a calculator to do addition, using ‘+’ the same way you would on a standard calculator.\n\n4+4\n\n[1] 8\n\n8+9\n\n[1] 17\n\n\n\n\n\nThe same goes for subtraction, but with th ‘-’ symbol.\n\n10-8\n\n[1] 2\n\n9-6\n\n[1] 3\n\n\n\n\n\nAnd multiplication, with “*“.\n\n5*3\n\n[1] 15\n\n4*2\n\n[1] 8\n\n\n\n\n\nLastly, division usese the ‘?’ symbol.\n\n9/3\n\n[1] 3\n\n40/6\n\n[1] 6.666667"
  },
  {
    "objectID": "Tutorial 1 SD.html#conclusion",
    "href": "Tutorial 1 SD.html#conclusion",
    "title": "Test File SD",
    "section": "Conclusion",
    "text": "Conclusion\nArithmetic is simple, easy, and convenient in R."
  }
]